module "wrapper" {
  source = "../../modules/lustre"

  for_each = var.items

  automatic_backup_retention_days                      = try(each.value.automatic_backup_retention_days, var.defaults.automatic_backup_retention_days, null)
  backup_id                                            = try(each.value.backup_id, var.defaults.backup_id, null)
  backup_tags                                          = try(each.value.backup_tags, var.defaults.backup_tags, {})
  backup_timeouts                                      = try(each.value.backup_timeouts, var.defaults.backup_timeouts, {})
  cloudwatch_log_group_class                           = try(each.value.cloudwatch_log_group_class, var.defaults.cloudwatch_log_group_class, null)
  cloudwatch_log_group_kms_key_id                      = try(each.value.cloudwatch_log_group_kms_key_id, var.defaults.cloudwatch_log_group_kms_key_id, null)
  cloudwatch_log_group_name                            = try(each.value.cloudwatch_log_group_name, var.defaults.cloudwatch_log_group_name, null)
  cloudwatch_log_group_retention_in_days               = try(each.value.cloudwatch_log_group_retention_in_days, var.defaults.cloudwatch_log_group_retention_in_days, 90)
  cloudwatch_log_group_tags                            = try(each.value.cloudwatch_log_group_tags, var.defaults.cloudwatch_log_group_tags, {})
  cloudwatch_log_group_use_name_prefix                 = try(each.value.cloudwatch_log_group_use_name_prefix, var.defaults.cloudwatch_log_group_use_name_prefix, true)
  copy_tags_to_backups                                 = try(each.value.copy_tags_to_backups, var.defaults.copy_tags_to_backups, false)
  create                                               = try(each.value.create, var.defaults.create, true)
  create_backup                                        = try(each.value.create_backup, var.defaults.create_backup, false)
  create_cloudwatch_log_group                          = try(each.value.create_cloudwatch_log_group, var.defaults.create_cloudwatch_log_group, true)
  create_file_cache                                    = try(each.value.create_file_cache, var.defaults.create_file_cache, false)
  create_security_group                                = try(each.value.create_security_group, var.defaults.create_security_group, true)
  daily_automatic_backup_start_time                    = try(each.value.daily_automatic_backup_start_time, var.defaults.daily_automatic_backup_start_time, null)
  data_compression_type                                = try(each.value.data_compression_type, var.defaults.data_compression_type, null)
  data_read_cache_configuration                        = try(each.value.data_read_cache_configuration, var.defaults.data_read_cache_configuration, {})
  data_repository_associations                         = try(each.value.data_repository_associations, var.defaults.data_repository_associations, {})
  data_repository_associations_timeouts                = try(each.value.data_repository_associations_timeouts, var.defaults.data_repository_associations_timeouts, {})
  deployment_type                                      = try(each.value.deployment_type, var.defaults.deployment_type, null)
  drive_cache_type                                     = try(each.value.drive_cache_type, var.defaults.drive_cache_type, null)
  efa_enabled                                          = try(each.value.efa_enabled, var.defaults.efa_enabled, null)
  file_cache_copy_tags_to_data_repository_associations = try(each.value.file_cache_copy_tags_to_data_repository_associations, var.defaults.file_cache_copy_tags_to_data_repository_associations, null)
  file_cache_kms_key_id                                = try(each.value.file_cache_kms_key_id, var.defaults.file_cache_kms_key_id, null)
  file_cache_lustre_configuration                      = try(each.value.file_cache_lustre_configuration, var.defaults.file_cache_lustre_configuration, {})
  file_cache_storage_capacity                          = try(each.value.file_cache_storage_capacity, var.defaults.file_cache_storage_capacity, null)
  file_cache_type_version                              = try(each.value.file_cache_type_version, var.defaults.file_cache_type_version, "2.12")
  file_system_type_version                             = try(each.value.file_system_type_version, var.defaults.file_system_type_version, null)
  kms_key_id                                           = try(each.value.kms_key_id, var.defaults.kms_key_id, null)
  log_configuration = try(each.value.log_configuration, var.defaults.log_configuration, {
    level = "WARN_ERROR"
  })
  metadata_configuration         = try(each.value.metadata_configuration, var.defaults.metadata_configuration, {})
  name                           = try(each.value.name, var.defaults.name, "")
  per_unit_storage_throughput    = try(each.value.per_unit_storage_throughput, var.defaults.per_unit_storage_throughput, null)
  root_squash_configuration      = try(each.value.root_squash_configuration, var.defaults.root_squash_configuration, {})
  security_group_description     = try(each.value.security_group_description, var.defaults.security_group_description, null)
  security_group_egress_rules    = try(each.value.security_group_egress_rules, var.defaults.security_group_egress_rules, {})
  security_group_ids             = try(each.value.security_group_ids, var.defaults.security_group_ids, [])
  security_group_ingress_rules   = try(each.value.security_group_ingress_rules, var.defaults.security_group_ingress_rules, {})
  security_group_name            = try(each.value.security_group_name, var.defaults.security_group_name, null)
  security_group_tags            = try(each.value.security_group_tags, var.defaults.security_group_tags, {})
  security_group_use_name_prefix = try(each.value.security_group_use_name_prefix, var.defaults.security_group_use_name_prefix, true)
  storage_capacity               = try(each.value.storage_capacity, var.defaults.storage_capacity, null)
  storage_type                   = try(each.value.storage_type, var.defaults.storage_type, null)
  subnet_ids                     = try(each.value.subnet_ids, var.defaults.subnet_ids, [])
  tags                           = try(each.value.tags, var.defaults.tags, {})
  throughput_capacity            = try(each.value.throughput_capacity, var.defaults.throughput_capacity, null)
  timeouts                       = try(each.value.timeouts, var.defaults.timeouts, {})
  weekly_maintenance_start_time  = try(each.value.weekly_maintenance_start_time, var.defaults.weekly_maintenance_start_time, null)
}
